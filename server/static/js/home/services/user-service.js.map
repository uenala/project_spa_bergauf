{"version":3,"sources":["home/services/user-service.ts"],"names":["User","User.User","User.User.constructor","User.User.get","User.User.GetAll","User.User.GetById","User.User.GetByUsername","User.User.Create","User.User.Update","User.User.Delete","User.User.handleSuccess","User.User.handleError"],"mappings":"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","file":"home/services/user-service.js","sourceRoot":"/Users/erol/CAS_FEE/git/casfee/project_spa_bergauf/SpaBergaufDotCh/","sourcesContent":["///<reference path='../../../typings/tsd.d.ts' />\nmodule User {\n  'use strict';\n\n  export interface IUser {\n    get():string;\n    GetAll(): any;\n    GetById(id): any;\n    GetByUsername(username): any;\n    Create(user): any;\n    Update(user): any;\n    Delete(id): any;\n  }\n\n  class User {\n    public static $inject = ['$http'\n    ];\n\n    private baseurl: string = \"http://localhost:3003\";\n\n    constructor(private $http: ng.IHttpService) {\n    }\n\n    get():string {\n      return 'User';\n    }\n\n    GetAll() {\n      return this.$http.get(this.baseurl + '/ws/users').then(this.handleSuccess, this.handleError('Error getting all users'));\n    }\n\n    GetById(id) {\n      return this.$http.get(this.baseurl + '/ws/users/' + id).then(this.handleSuccess, this.handleError('Error getting user by id'));\n    }\n\n    GetByUsername(username) {\n      return this.$http.get(this.baseurl + '/ws/users/' + username).then(this.handleSuccess, this.handleError('Error getting user by username'));\n    }\n\n    Create(user) {\n      return this.$http.post(this.baseurl + '/ws/users', user).then(this.handleSuccess, this.handleError('Error creating user'));\n    }\n\n    Update(user) {\n      return this.$http.put(this.baseurl + '/ws/users/' + user.id, user).then(this.handleSuccess, this.handleError('Error updating user'));\n    }\n\n    Delete(id) {\n      return this.$http.delete(this.baseurl + '/ws/users/' + id).then(this.handleSuccess, this.handleError('Error deleting user'));\n    }\n\n    // private functions\n\n    private handleSuccess(data) {\n      return data;  //TODO return data and success, because register-controller checks for success\n    }\n\n    private handleError(error) {\n      return function () {\n        return {success: false, message: error};\n      };\n    }\n\n\n  }\n\n  /**\n   * @ngdoc service\n   * @name home.service:User\n   *\n   * @description\n   *\n   */\n  angular\n    .module('home')\n    .service('User', User);\n}\n"]}