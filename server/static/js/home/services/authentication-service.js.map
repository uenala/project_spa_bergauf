{"version":3,"sources":["home/services/authentication-service.ts"],"names":["Authentication","Authentication.Authentication","Authentication.Authentication.constructor","Authentication.Authentication.get","Authentication.Authentication.Login","Authentication.Authentication.SetCredentials","Authentication.Authentication.ClearCredentials"],"mappings":"AAAA,AACA,iDADiD;AACjD,IAAO,cAAc,CAkFpB;AAlFD,WAAO,eAAc,EAAC,CAAC;IACrBA,YAAYA,CAACA;IASbA,IAAMA,cAAcA;QAIlBC,SAJIA,cAAcA,CAIEA,KAAsBA,EAAUA,YAAiBA,EAAUA,UAAeA,EAAUA,gBAAiDA;YAArIC,UAAKA,GAALA,KAAKA,CAAiBA;YAAUA,iBAAYA,GAAZA,YAAYA,CAAKA;YAAUA,eAAUA,GAAVA,UAAUA,CAAKA;YAAUA,qBAAgBA,GAAhBA,gBAAgBA,CAAiCA;QACzJA,CAACA;QAEDD,4BAAGA,GAAHA;YACEE,MAAMA,CAACA,gBAAgBA,CAACA;QAC1BA,CAACA;QAEDF,8BAAKA,GAALA,UAAMA,QAAgBA,EAAEA,QAAgBA,EAAGA,QAAaA;YAGtDG;6DACiDA;YAE/CA,IAAIA,QAAQA,CAACA;YACbA,IAAIA,CAACA,gBAAgBA,CAACA,aAAaA,CAACA,QAAQA,CAACA,CAC1CA,IAAIA,CAACA,UAAUA,IAAIA;gBAClB,EAAE,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAChD,QAAQ,GAAG,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;gBAC7B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,QAAQ,GAAG,EAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,4BAA4B,EAAC,CAAC;gBACrE,CAAC;gBACD,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACrB,CAAC,CAACA,CAACA;YAGPA;6DACiDA;YACjDA,6EAA6EA;YAC7EA,oCAAoCA;YACpCA,6BAA6BA;YAC7BA,SAASA;QAEXA,CAACA;QAGDH,uCAAcA,GAAdA,UAAeA,QAAgBA,EAAEA,QAAgBA;YAC/CI,IAAIA,QAAQA,GAAGA,CAACA,QAAQA,GAAGA,GAAGA,GAAGA,QAAQA,CAACA,CAACA;YAE3CA,IAAIA,CAACA,UAAUA,CAACA,OAAOA,GAAGA;gBACxBA,WAAWA,EAAEA;oBACXA,QAAQA,EAAEA,QAAQA;oBAClBA,QAAQA,EAAEA,QAAQA;iBACnBA;aACFA,CAACA;YAEFA,IAAIA,CAACA,KAAKA,CAACA,QAAQA,CAACA,OAAOA,CAACA,MAAMA,CAACA,eAAeA,CAACA,GAAGA,QAAQA,GAAGA,QAAQA,EAAEA,qBAAqBA;YAChGA,IAAIA,CAACA,YAAYA,CAACA,GAAGA,CAACA,SAASA,EAAEA,IAAIA,CAACA,UAAUA,CAACA,OAAOA,CAACA,CAACA;QAC5DA,CAACA;QAIDJ,yCAAgBA,GAAhBA;YACEK,IAAIA,CAACA,UAAUA,CAACA,OAAOA,GAAGA,EAAEA,CAACA;YAC7BA,IAAIA,CAACA,YAAYA,CAACA,MAAMA,CAACA,SAASA,CAACA,CAACA;YACpCA,IAAIA,CAACA,KAAKA,CAACA,QAAQA,CAACA,OAAOA,CAACA,MAAMA,CAACA,aAAaA,GAAGA,QAAQA,CAACA;QAC9DA,CAACA;QA1DaL,sBAAOA,GAAGA,CAACA,OAAOA,EAAEA,cAAcA,EAAEA,YAAYA,EAAEA,kBAAkBA,CACjFA,CAACA;QA0DJA,qBAACA;IAADA,CA5DAD,AA4DCC,IAAAD;IAEDA,AAOAA;;;;;;OADGA;IACHA,OAAOA,CACJA,MAAMA,CAACA,MAAMA,CAACA,CACdA,OAAOA,CAACA,gBAAgBA,EAAEA,cAAcA,CAACA,CAACA;AAC/CA,CAACA,EAlFM,cAAc,KAAd,cAAc,QAkFpB","file":"home/services/authentication-service.js","sourceRoot":"/Users/erol/CAS_FEE/git/casfee/project_spa_bergauf/SpaBergaufDotCh/","sourcesContent":["///<reference path='../../../typings/tsd.d.ts' />\nmodule Authentication {\n  'use strict';\n\n  export interface IAuthentication {\n    get():string;\n    Login(username: string, password: string , callback: any): any;\n    SetCredentials(username: string, password: string): any;\n    ClearCredentials(): void;\n  }\n\n  class Authentication {\n    public static $inject = ['$http', '$cookieStore', '$rootScope', 'UserLocalStorage'\n    ];\n\n    constructor(private $http: ng.IHttpService, private $cookieStore: any, private $rootScope: any, private UserLocalStorage: Home.Services.IUserLocalStorage) {\n    }\n\n    get(): string {\n      return 'Authentication';\n    }\n\n    Login(username: string, password: string , callback: any) {\n\n\n      /* Dummy authentication for testing, uses $timeout to simulate api call\n       ----------------------------------------------*/\n\n        var response;\n        this.UserLocalStorage.GetByUsername(username)\n          .then(function (user) {\n            if (user !== null && user.password === password) {\n              response = {success: true};\n            } else {\n              response = {success: false, message: 'Email oder Passwort falsch'};\n            }\n            callback(response);\n          });\n\n\n      /* Use this for real authentication\n       ----------------------------------------------*/\n      //$http.post('/api/authenticate', { username: username, password: password })\n      //    .success(function (response) {\n      //        callback(response);\n      //    });\n\n    }\n\n\n    SetCredentials(username: string, password: string) {\n      var authdata = (username + ':' + password);\n\n      this.$rootScope.globals = {\n        currentUser: {\n          username: username,\n          authdata: authdata\n        }\n      };\n\n      this.$http.defaults.headers.common['Authorization'] = 'Basic ' + authdata; // jshint ignore:line\n      this.$cookieStore.put('globals', this.$rootScope.globals);\n    }\n\n\n\n    ClearCredentials() {\n      this.$rootScope.globals = {};\n      this.$cookieStore.remove('globals');\n      this.$http.defaults.headers.common.Authorization = 'Basic ';\n    }\n  }\n\n  /**\n   * @ngdoc service\n   * @name home.service:Authentication\n   *\n   * @description\n   *\n   */\n  angular\n    .module('home')\n    .service('Authentication', Authentication);\n}\n"]}