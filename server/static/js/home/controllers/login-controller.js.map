{"version":3,"sources":["home/controllers/login-controller.ts"],"names":["Home","Home.LoginCtrl","Home.LoginCtrl.LoginCtrl","Home.LoginCtrl.LoginCtrl.constructor","Home.LoginCtrl.LoginCtrl.constructor.login"],"mappings":"AAAA,AACA,iDADiD;AACjD,IAAO,IAAI,CAmEV;AAnED,WAAO,IAAI;IAACA,IAAAA,SAASA,CAmEpBA;IAnEWA,WAAAA,UAASA,EAACA,CAACA;QACrBC,YAAYA,CAACA;QAEbA,IAAMA,SAASA;YAiBbC,oDAAoDA;YACpDA,SAlBIA,SAASA,CAkBQA,SAA8BA,EAC9BA,cAA8CA,EAC9CA,KAA0BA,EAC1BA,IAAoBA;gBAHpBC,cAASA,GAATA,SAASA,CAAqBA;gBAC9BA,mBAAcA,GAAdA,cAAcA,CAAgCA;gBAC9CA,UAAKA,GAALA,KAAKA,CAAqBA;gBAC1BA,SAAIA,GAAJA,IAAIA,CAAgBA;gBAGvCA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA;gBACdA,EAAEA,CAACA,QAAQA,GAAGA,WAAWA,CAACA;gBAE1BA,EAAEA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;gBAGfA,AACAA,qBADqBA;gBACrBA,cAAcA,CAACA,gBAAgBA,EAAEA,CAACA;gBAGpCA,SAASA,KAAKA;oBACZC,EAAEA,CAACA,WAAWA,GAAGA,IAAIA,CAACA;oBACtBA,cAAcA,CAACA,KAAKA,CAACA,EAAEA,CAACA,QAAQA,EAAEA,EAAEA,CAACA,QAAQA,EAAEA,UAAUA,QAAQA;wBAC/D,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;4BACrB,cAAc,CAAC,cAAc,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC;4BACxD,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;4BAC5B,IAAI,CAAC,KAAK,CAAC,6BAA6B,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC;wBACxD,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACR,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;4BACrC,EAAE,CAAC,WAAW,GAAG,KAAK,CAAC;wBACzB,CAAC;oBACH,CAAC,CAACA,CAACA;gBACLA,CAACA;YAEHD,CAACA;YA5CDD,sBAAsBA;YACtBA,4FAA4FA;YAC5FA,yGAAyGA;YACzGA,yCAAyCA;YAC3BA,iBAAOA,GAAGA,CAACA,WAAWA,EAAEA,gBAAgBA,EAAEA,OAAOA,EAAEA,MAAMA,CACtEA,CAACA;YA0CJA,gBAACA;QAADA,CAnDAD,AAmDCC,IAAAD;QAGDA,AAOAA;;;;;;UADEA;QACFA,OAAOA,CACJA,MAAMA,CAACA,MAAMA,CAACA,CACdA,UAAUA,CAACA,WAAWA,EAAEA,SAASA,CAACA,CAACA;IACxCA,CAACA,EAnEWD,SAASA,GAATA,cAASA,KAATA,cAASA,QAmEpBA;AAADA,CAACA,EAnEM,IAAI,KAAJ,IAAI,QAmEV","file":"home/controllers/login-controller.js","sourceRoot":"/Users/erol/CAS_FEE/git/casfee/project_spa_bergauf/SpaBergaufDotCh/","sourcesContent":["///<reference path='../../../typings/tsd.d.ts' />\nmodule Home.LoginCtrl {\n  'use strict';\n\n  class LoginCtrl {\n\n    ctrlName: string\n\n    // $inject annotation.\n    // It provides $injector with information about dependencies to be injected into constructor\n    // it is better to have it close to the constructor, because the parameters must match in count and type.\n    // See http://docs.angularjs.org/guide/di\n    public static $inject = ['$location', 'Authentication', 'Flash', '$log'\n    ];\n\n    login: any;\n    dataLoading: boolean;\n    username: string;\n    password: string;\n\n\n    // dependencies are injected via AngularJS $injector\n    constructor( private $location: ng.ILocationService,\n                 private Authentication: Authentication.IAuthentication,\n                 private Flash: Flash.IFlashService,\n                 private $log: ng.ILogService\n    ) {\n\n      var vm = this;\n      vm.ctrlName = 'LoginCtrl';\n\n      vm.login = login;\n\n\n        // reset login status\n        Authentication.ClearCredentials();\n\n\n      function login() {\n        vm.dataLoading = true;\n        Authentication.Login(vm.username, vm.password, function (response) { // function (response) is a callback-function\n          if (response.success) {\n            Authentication.SetCredentials(vm.username, vm.password);\n            $location.path('/userhome');\n            $log.debug(\"Login success for username \" + vm.username);\n            } else {\n            Flash.Error(response.message, false);\n            vm.dataLoading = false;\n          }\n        });\n      }\n\n    }\n\n\n  }\n\n\n  /**\n  * @ngdoc object\n  * @name home.controller:LoginCtrl\n  *\n  * @description\n  *\n  */\n  angular\n    .module('home')\n    .controller('LoginCtrl', LoginCtrl);\n}\n"]}